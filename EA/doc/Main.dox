using namespace std;

namespace ea {

/**

@mainpage OpenEA Framework Documentation

@section main-intro Introduction
Welcome to the Git repository of the OpenEA project. The OpenEA project is an open-source framework for Evolutionary Computing built in C++. The framework is general-purpose and can be expanded to fit any demand without sacrificing speed and reusability. Here are the main features of the framework:

- General interface for representations and fitness
- General interface for operators
- General interface for algorithms
- Two programming options: C++ code or EAML configuration file
- Powerful Command-Line Interface (CLI) allowing fast configuration
- Plugin loader which loads user code without recompiling
- Parallelism via multithreading or distributed computation on a computing cluster or grid
- Back-up to and restore from file system
- Speed tracker (both generational and for each phase)

@note
The framework is in the Alpha state, therefore please expect changes in API.

@section main-authors Authors

- Robin Mueller-Bady
- Bui Quang Minh
- Kiet Quang Huynh Vo
- Chi-Thanh Nguyen 
- Nguyen-Quang Pham
- Manuel Schildknecht

Individual contribution is shown in the specific source files.
Please see https://netzwerksicherheit.fb2.fh-frankfurt.de/ for further details on the research group.

@section main-install Installation
Currently, the framework is only tested on Ubuntu 16.04 system.

@subsection main-github GitHub
To install from GitHub, first, clone the repository to your computer:

@code
git clone https://github.com/fg-netzwerksicherheit/openEA.git
@endcode

Then, run the Makefile using the command:

@code
sudo make install
@endcode

This command will compile the source and create symbolic <b>links</b> to the binary and source files,
so you can include and link them any where on your machine.
To test the installation, enter the command:

@code
openea
@endcode

And a list of available sub-commands should be printed on the terminal. 

@section main-howtouse How to use
For new users, it is recommended to read the @ref tutorials page to get used to the framework.
More tutorials are being written, so don't be disappointed.
All available operators are described in the @ref operators page. For more information, check the
API documentation of each class.

@note
Users of the library should understand the basic operation of Evolutionary Computing and C++ programming.
If you don't know what is an Evolutionary Algoithm, I recommend the book 
* **Introduction to Evolutionary Computing**, 2nd Edition, 2015 by *A.E. Eiben* and *J.E. Smith*.

 */

}
